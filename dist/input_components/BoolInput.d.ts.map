{"version":3,"sources":["../src/input_components/BoolInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,MAAM,WAAW,eAAe;IAC5B,KAAK,EAAE,MAAM,CAAC;IACd,UAAU,CAAC,EAAE,MAAM,CAAC;CACvB;AACD,MAAM,WAAW,cAAc;IAC3B,KAAK,EAAE,OAAO,CAAC;IACf,MAAM,EAAE,eAAe,CAAC;IACxB,QAAQ,EAAE,CAAC,OAAO,KAAA,KAAK,IAAI,CAAC;CAC/B;AAED,cAAM,SAAU,SAAQ,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,GAAG,CAAC;IACxD,SAAS,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC;gBAEtB,KAAK,KAAA;IAkEjB,MAAM;CAwBT;AAED,eAAe,SAAS,CAAC","file":"BoolInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport interface BoolInputConfig {\n    label: string;\n    class_name?: string;\n}\nexport interface BoolInputProps {\n    value: boolean;\n    config: BoolInputConfig;\n    onChange: (boolean) => void;\n}\n\nclass BoolInput extends React.Component<BoolInputProps, any> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n        const thing_size = '30px';\n        this.container = styled.div `\n            text-align: left;\n            padding: 16px 20px !important;\n            p, .bool_block, .bool_input{\n                vertical-align: middle;\n                display: inline-block;\n            }\n            p{\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                font-weight: bold;\n                width: 60%;\n                overflow: hidden;\n            }\n            .bool_block{\n                width: 40%;\n                text-align: right;\n            }\n            .bool_input{\n                cursor: pointer;\n                border-radius: 100px;\n                width: 60px;\n                height: ${thing_size};\n                position: relative;\n                border: 2px solid ${props => props.theme.colors.border};\n                background-color: ${props => props.theme.colors.border};\n                box-sizing: content-box;\n                transition: all 0.3s;\n                &:HOVER{\n                    border-color: ${props => props.theme.colors.brand[2]};\n                    .bool_input_thing{\n                        //background-color: ${props => props.theme.colors.dark[2]};\n                    }\n                    &.active{\n                        .bool_input_thing{\n                            //background-color: ${props => props.theme.colors.brand[2]};\n                        }\n                    }\n                }\n                &.active{\n                    background-color: ${props => props.theme.colors.brand[1]};\n                    .bool_input_thing{\n                        //background-color: ${props => props.theme.colors.brand[1]};\n                        left: ${thing_size};\n                        top: 0;\n                    }\n                }\n                .bool_input_thing{\n                    transition: all 0.4s;\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    background-color: #fff;\n                    box-shadow: 0 1px 4px rgba(0,0,0,0.5);\n                    border-radius: 50%;\n                    width: ${thing_size};\n                    height: ${thing_size};\n                }\n            }\n        `;\n\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input bool_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <div className=\"bool_block\">\n                    <div\n                        className={`bool_input ${this.props.value === true ? 'active' : ''}`}\n                        onClick={() => {\n                            this.props.onChange(!this.props.value);\n                        }}>\n                        <div className=\"bool_input_thing\">\n\n                        </div>\n                    </div>\n                </div>\n            </this.container>\n        );\n    }\n}\n\nexport default BoolInput;\n"]}