{"version":3,"sources":["../src/input_components/BoolInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,uDAAuC;AAYvC;IAAwB,6BAAoC;IAGxD,mBAAY,KAAK;QAAjB,YACI,kBAAM,KAAK,CAAC,SA+Df;QA9DG,IAAM,UAAU,GAAG,MAAM,CAAC;QAC1B,KAAI,CAAC,SAAS,GAAG,2BAAM,CAAC,GAAG,o/DAAC,gQAQX,EAAmC,6ZAclC,EAAU,4EAEA,EAAkC,uCAClC,EAAkC,kJAIlC,EAAoC,yFAE1B,EAAmC,uJAI/B,EAAoC,2IAK9C,EAAoC,yFAE9B,EAAoC,mCAClD,EAAU,gbAYb,EAAU,iCACT,EAAU,+CAG/B,KAnDgB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAclC,UAAU,EAEA,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAzB,CAAyB,EAClC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAzB,CAAyB,EAIlC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,EAE1B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAI/B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,EAK9C,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,EAE9B,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,EAClD,UAAU,EAYb,UAAU,EACT,UAAU,CAG/B,CAAC;;IAEN,CAAC;IAED,0BAAM,GAAN;QAAA,iBAuBC;QAtBG,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,WAAW,GAAG,uBAAuB,CAAC;QAC1C,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,IAAI,CAAC,SAAS,IAAC,SAAS,EAAE,WAAW;YAChC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,+BAAK,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACzC,6BAAK,SAAS,EAAC,YAAY;gBACvB,6BACI,SAAS,EAAE,iBAAc,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAE,EACpE,OAAO,EAAE;wBACL,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC3C,CAAC;oBACD,6BAAK,SAAS,EAAC,kBAAkB,GAE3B,CACJ,CACJ,CACO,CACpB,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CA7FA,AA6FC,CA7FuB,KAAK,CAAC,SAAS,GA6FtC;AAED,kBAAe,SAAS,CAAC","file":"input_components/BoolInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport interface BoolInputConfig {\n    label: string;\n    class_name?: string;\n}\nexport interface BoolInputProps {\n    value: boolean;\n    config: BoolInputConfig;\n    onChange: (boolean) => void;\n}\n\nclass BoolInput extends React.Component<BoolInputProps, any> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n        const thing_size = '30px';\n        this.container = styled.div `\n            text-align: left;\n            padding: 16px 20px !important;\n            p, .bool_block, .bool_input{\n                vertical-align: middle;\n                display: inline-block;\n            }\n            p{\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                font-weight: bold;\n                width: 60%;\n                overflow: hidden;\n            }\n            .bool_block{\n                width: 40%;\n                text-align: right;\n            }\n            .bool_input{\n                cursor: pointer;\n                border-radius: 100px;\n                width: 60px;\n                height: ${thing_size};\n                position: relative;\n                border: 2px solid ${props => props.theme.colors.border};\n                background-color: ${props => props.theme.colors.border};\n                box-sizing: content-box;\n                transition: all 0.3s;\n                &:HOVER{\n                    border-color: ${props => props.theme.colors.brand[2]};\n                    .bool_input_thing{\n                        //background-color: ${props => props.theme.colors.dark[2]};\n                    }\n                    &.active{\n                        .bool_input_thing{\n                            //background-color: ${props => props.theme.colors.brand[2]};\n                        }\n                    }\n                }\n                &.active{\n                    background-color: ${props => props.theme.colors.brand[1]};\n                    .bool_input_thing{\n                        //background-color: ${props => props.theme.colors.brand[1]};\n                        left: ${thing_size};\n                        top: 0;\n                    }\n                }\n                .bool_input_thing{\n                    transition: all 0.4s;\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    background-color: #fff;\n                    box-shadow: 0 1px 4px rgba(0,0,0,0.5);\n                    border-radius: 50%;\n                    width: ${thing_size};\n                    height: ${thing_size};\n                }\n            }\n        `;\n\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input bool_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <div className=\"bool_block\">\n                    <div\n                        className={`bool_input ${this.props.value === true ? 'active' : ''}`}\n                        onClick={() => {\n                            this.props.onChange(!this.props.value);\n                        }}>\n                        <div className=\"bool_input_thing\">\n\n                        </div>\n                    </div>\n                </div>\n            </this.container>\n        );\n    }\n}\n\nexport default BoolInput;\n"],"sourceRoot":"/source/"}