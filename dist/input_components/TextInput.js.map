{"version":3,"sources":["../src/input_components/TextInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,uDAAuC;AAYvC;IAAwB,6BAAgD;IAGpE,mBAAY,KAAK;QAAjB,YACI,kBAAM,KAAK,CAAC,SAuBf;QArBG,KAAI,CAAC,SAAS,GAAG,2BAAM,CAAC,GAAG,knBAAC,0EAGX,EAAmC,sLAMxB,EAAmC,0PAOnC,EAAoC,+CAG/D,KAhBgB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAMxB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAOnC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAG/D,CAAC;;IAEN,CAAC;IAED,0BAAM,GAAN;QAAA,iBAkBC;QAjBG,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,WAAW,GAAG,+BAA+B,CAAC;QAClD,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,IAAI,CAAC,SAAS,IAAC,SAAS,EAAE,WAAW;YAChC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,+BAAK,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACzC,+BACI,SAAS,EAAE,IAAI,EACf,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAnC,CAAmC,GACpD,CACW,CACpB,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAhDA,AAgDC,CAhDuB,KAAK,CAAC,SAAS,GAgDtC;AAED,kBAAe,SAAS,CAAC","file":"input_components/TextInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport interface TextInputConfig {\n    label?: string;\n    class_name?: string;\n}\nexport interface TextInputProps {\n    value: string;\n    config: TextInputConfig;\n    onChange: (string) => void;\n}\n\nclass TextInput extends React.Component<TextInputProps, TextInputConfig> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n\n        this.container = styled.div `\n            text-align: left;\n            p{\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                margin-bottom: 12px;\n                font-weight: bold;\n            }\n            input{\n                border: 2px solid ${props => props.theme.colors.gray[2]};\n                border-radius: 4px;\n                font-size: 16px;\n                padding: 8px 12px;\n                width: 100%;\n                transition: all 0.3s;\n                &:HOVER, &:FOCUS{\n                    border-color: ${props => props.theme.colors.brand[2]};\n                }\n            }\n        `;\n\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input multi_select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <input\n                    autoFocus={true}\n                    type=\"text\"\n                    value={this.props.value}\n                    onChange={e => this.props.onChange(e.target.value)}\n                />\n            </this.container>\n        );\n    }\n}\n\nexport default TextInput;\n"],"sourceRoot":"/source/"}