{"version":3,"sources":["../src/input_components/SelectInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,MAAM,WAAW,kBAAkB;IAC/B,KAAK,EAAE,GAAG,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;CACjB;AACD,MAAM,WAAW,iBAAiB;IAC9B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,kBAAkB,EAAE,CAAC;IAC9B,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,QAAQ,CAAC,EAAE,OAAO,CAAC;CACtB;AACD,MAAM,WAAW,gBAAgB;IAC7B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,MAAM,EAAE,iBAAiB,CAAC;IAC1B,QAAQ,EAAE,CAAC,MAAM,KAAA,KAAK,IAAI,CAAC;CAC9B;AAYD,cAAM,WAAY,SAAQ,KAAK,CAAC,SAAS,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;IAC1E,MAAM;CAwBT;AAED,eAAe,WAAW,CAAC","file":"input_components/SelectInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from '../styling/styled';\nimport Select from 'react-select';\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface SelectInputOptions {\n    value: any;\n    label: string;\n}\nexport interface SelectInputConfig {\n    label?: string;\n    options: SelectInputOptions[];\n    placeholder?: string;\n    class_name?: string;\n    no_options_message?: string;\n    searchable?: boolean;\n    disabled?: boolean;\n}\nexport interface SelectInputProps {\n    value?: string;\n    config: SelectInputConfig;\n    onChange: (string) => void;\n}\n\nconst SelectInputContainer = styled.div `\n    text-align: left;\n    p.multi_select_label {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n`;\n\nclass SelectInput extends React.Component<SelectInputProps, SelectInputConfig> {\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <SelectInputContainer className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <Select\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={(e) => {\n                        this.props.onChange(e);\n                    }}\n                    isDisabled={cfg.disabled || false}\n                    isSearchable={cfg.searchable || false}\n                    noOptionsMessage={() => cfg.no_options_message || null}\n                    options={cfg.options}\n                />\n            </SelectInputContainer>\n        );\n    }\n}\n\nexport default SelectInput;\n"],"sourceRoot":"/source/"}