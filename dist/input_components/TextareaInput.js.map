{"version":3,"sources":["../src/input_components/TextareaInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,uDAAuC;AAiBvC,IAAI,cAAc,GAAG;IACjB,IAAI,EAAE,CAAC;CACV,CAAC;AAEF;IAA4B,iCAAwD;IAGhF,uBAAY,KAAK;QAAjB,YACI,kBAAM,KAAK,CAAC,SAqBf;QAnBG,KAAI,CAAC,SAAS,GAAG,2BAAM,CAAC,GAAG,ilBAAC,2EAGX,EAAmC,0LAMxB,EAAmC,oNAMnC,EAAoC,+CAG/D,KAfgB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAMxB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,EAMnC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAG/D,CAAC;;IACN,CAAC;IAED,8BAAM,GAAN;QAAA,iBAmBC;QAlBG,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,WAAW,GAAG,2BAA2B,CAAC;QAC9C,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,IAAI,CAAC,SAAS,IAAC,SAAS,EAAE,WAAW;YAChC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,+BAAK,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACzC,kCACI,IAAI,EAAE,CAAC,EACP,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,EACxC,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAC3E,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAnC,CAAmC,GAC3C,CACE,CACpB,CAAC;IACN,CAAC;IACL,oBAAC;AAAD,CA/CA,AA+CC,CA/C2B,KAAK,CAAC,SAAS,GA+C1C;AAED,kBAAe,aAAa,CAAC","file":"input_components/TextareaInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface TextareaInputConfig {\n    label?: string;\n    rows?: number;\n    placeholder?: string;\n    class_name?: string;\n}\nexport interface TextareaInputProps {\n    value: string;\n    config: TextareaInputConfig;\n    onChange: (string) => void;\n    autofocus?: boolean;\n}\n\nlet default_config = {\n    rows: 3\n};\n\nclass TextareaInput extends React.Component<TextareaInputProps, TextareaInputConfig> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n\n        this.container = styled.div `\n            text-align: left;\n            p {\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                margin-bottom: 12px;\n                font-weight: bold;\n            }\n            textarea {\n                border: 2px solid ${props => props.theme.colors.gray[2]};\n                border-radius: 4px;\n                font-size: 16px;\n                padding: 8px 12px;\n                width: 100%;\n                &:HOVER, &:FOCUS {\n                    border-color: ${props => props.theme.colors.brand[2]};\n                }\n            }\n        `;\n    }\n\n    render() {\n        let cfg = Object.assign({}, default_config, this.props.config);\n        let class_names = \"user_input textarea_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <textarea\n                    rows={3}\n                    autoFocus={this.props.autofocus || false}\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={e => this.props.onChange(e.target.value)}>\n                </textarea>\n            </this.container>\n        );\n    }\n}\n\nexport default TextareaInput;\n"],"sourceRoot":"/source/"}