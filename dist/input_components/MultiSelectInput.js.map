{"version":3,"sources":["../src/input_components/MultiSelectInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,4CAAuC;AACvC,6CAAkC;AAsBlC,IAAM,yBAAyB,GAAG,gBAAM,CAAC,GAAG,2OAAC,sEAG5B,EAAmC,gGAKnD,KALgB,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAKnD,CAAC;AAEF;IAA+B,oCAA8D;IAA7F;;IA2BA,CAAC;IAzBG,iCAAM,GAAN;QAAA,iBAwBC;QAvBG,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,WAAW,GAAG,+BAA+B,CAAC;QAClD,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,yBAAyB,IAAC,SAAS,EAAE,WAAW;YAC3C,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,2BAAG,SAAS,EAAC,oBAAoB,IAAG,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACxE,oBAAC,sBAAM,IACH,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAC3E,OAAO,EAAE,IAAI,EACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAC,CAAC;oBACR,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC,EACD,YAAY,EAAE,GAAG,CAAC,UAAU,IAAI,KAAK,EACrC,UAAU,EAAE,GAAG,CAAC,QAAQ,IAAI,KAAK,EACjC,gBAAgB,EAAE,cAAM,OAAA,GAAG,CAAC,kBAAkB,IAAI,IAAI,EAA9B,CAA8B,EACtD,OAAO,EAAE,GAAG,CAAC,OAAO,GACtB,CACsB,CAC/B,CAAC;IACN,CAAC;IACL,uBAAC;AAAD,CA3BA,AA2BC,CA3B8B,KAAK,CAAC,SAAS,GA2B7C;AAED,kBAAe,gBAAgB,CAAC","file":"input_components/MultiSelectInput.js","sourcesContent":["import * as React from 'react';\nimport styled from '../styling/styled';\nimport Select from 'react-select';\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface MultiSelectOptions {\n    value: any;\n    label: string;\n}\nexport interface MultiSelectInputConfig {\n    label?: string;\n    placeholder?: string;\n    options: MultiSelectOptions[];\n    class_name?: string;\n    no_options_message?: string;\n    disabled?: boolean;\n    searchable?: boolean;\n}\nexport interface MultiSelectInputProps {\n    value: string;\n    config: MultiSelectInputConfig;\n    onChange: (string) => void;\n}\n\nconst MultiSelectInputContainer = styled.div `\n    text-align: left;\n    p.multi_select_label {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n`;\n\nclass MultiSelectInput extends React.Component<MultiSelectInputProps, MultiSelectInputConfig> {\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input multi_select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <MultiSelectInputContainer className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <Select\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    isMulti={true}\n                    value={this.props.value}\n                    onChange={(e) => {\n                        this.props.onChange(e);\n                    }}\n                    isSearchable={cfg.searchable || false}\n                    isDisabled={cfg.disabled || false}\n                    noOptionsMessage={() => cfg.no_options_message || null}\n                    options={cfg.options}\n                />\n            </MultiSelectInputContainer>\n        );\n    }\n}\n\nexport default MultiSelectInput;\n"],"sourceRoot":"/source/"}