{"version":3,"sources":["../src/input_components/GridInput.tsx"],"names":[],"mappings":"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","file":"input_components/GridInput.js","sourcesContent":["import * as React from 'react';\nimport styled from '../styling/styled';\n\nexport type GridType = \"icons\" | \"colors\";\ninterface GridInputStyleProps {\n    grid_type: GridType;\n    presentation: string;\n}\nexport interface GridInputConfig {\n    label?: string;\n    grid_type: GridType;\n    options: any;\n    class_name?: string;\n}\nexport interface GridInputProps {\n    value: any;\n    config: GridInputConfig;\n    onChange: (any) => void;\n}\n\nconst GridInputContainer = styled.div<GridInputStyleProps>`\n    text-align: left;\n    padding: 16px 20px !important;\n    p, .bool_block, .bool_input{\n        vertical-align: middle;\n        display: inline-block;\n    }\n    p{\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n    .grid_block{\n        border-radius: 4px;\n        background-color: ${props => props.theme.colors.border};\n        padding: 4px;\n        display: grid;\n        grid-template-columns: ${props => props.grid_type === 'colors' || props.grid_type === 'icons' ? 'repeat(6, 1fr)' : 'repeat( auto-fit, minmax(120px, 1fr) )'};\n        grid-gap: 4px 4px;\n    }\n`;\n\nconst StyledGridItem = styled.div<GridInputStyleProps>`\n    box-shadow: 0 2px 3px rgba(38, 38, 38, 0.12);\n    background-color: #fff;\n    cursor: pointer;\n    border-radius: 4px;\n    padding: ${props => props.grid_type === 'icons' ? '6px 0' : '16px 0'};\n    height: ${props => props.grid_type === 'colors' || props.grid_type === 'icons' ? '44px' : 'unset'};\n    text-align: center;\n    font-size: 16px;\n    &:HOVER{\n        background-color: ${props => props.grid_type === 'colors' ? props.color : props.theme.colors.dark[1]};\n        opacity: 0.5;\n        color: #fff;\n    }\n    &.active{\n        background-color: ${props => props.grid_type === 'colors' ? props.color : props.theme.colors.dark[1]};\n        color: #fff;\n        font-weight: bold;\n        &:HOVER{\n            opacity: 1;\n        }\n    }\n    span{\n        display: ${props => props.grid_type === 'colors' || props.grid_type === 'icons' ? 'none' : 'inline-block'};\n    }\n    svg{\n        width: 30px;\n        height: 30px;\n    }\n`;\n\nclass GridInput extends React.Component<GridInputProps, any> {\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input grid_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <GridInputContainer\n                grid_type={cfg.grid_type}\n                className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <div className=\"grid_block\">\n                    {\n                        cfg.options.map((item, i) => {\n                            return (\n                                <StyledGridItem\n                                    color={item.color}\n                                    grid_type={cfg.grid_type}\n                                    key={i}\n                                    className={`grid_item ${this.props.value === item.value ? 'active' : ''}`}\n                                    onClick={() => {\n                                        this.props.onChange(item.value);\n                                    }}\n                                    >\n                                    { cfg.grid_type === 'icons' ? null : <span>{item.label}</span> }\n\n                                </StyledGridItem>\n                            );\n                        })\n                    }\n                </div>\n            </GridInputContainer>\n        );\n    }\n}\n\nexport default GridInput;\n"],"sourceRoot":"/source/"}