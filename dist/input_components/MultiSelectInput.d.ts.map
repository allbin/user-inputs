{"version":3,"sources":["../src/input_components/MultiSelectInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,MAAM,WAAW,kBAAkB;IAC/B,KAAK,EAAE,GAAG,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;CACjB;AACD,MAAM,WAAW,sBAAsB;IACnC,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,OAAO,EAAE,kBAAkB,EAAE,CAAC;IAC9B,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,UAAU,CAAC,EAAE,OAAO,CAAC;CACxB;AACD,MAAM,WAAW,qBAAqB;IAClC,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,sBAAsB,CAAC;IAC/B,QAAQ,EAAE,CAAC,MAAM,KAAA,KAAK,IAAI,CAAC;CAC9B;AAED,cAAM,gBAAiB,SAAQ,KAAK,CAAC,SAAS,CAAC,qBAAqB,EAAE,sBAAsB,CAAC;IACzF,SAAS,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC;gBAEtB,KAAK,KAAA;IAcjB,MAAM;CAyBT;AAED,eAAe,gBAAgB,CAAC","file":"MultiSelectInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface MultiSelectOptions {\n    value: any;\n    label: string;\n}\nexport interface MultiSelectInputConfig {\n    label?: string;\n    placeholder?: string;\n    options: MultiSelectOptions[];\n    class_name?: string;\n    no_options_message?: string;\n    disabled?: boolean;\n    searchable?: boolean;\n}\nexport interface MultiSelectInputProps {\n    value: string;\n    config: MultiSelectInputConfig;\n    onChange: (string) => void;\n}\n\nclass MultiSelectInput extends React.Component<MultiSelectInputProps, MultiSelectInputConfig> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n\n        this.container = styled.div `\n            text-align: left;\n            p.multi_select_label {\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                margin-bottom: 12px;\n                font-weight: bold;\n            }\n        `;\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input multi_select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <Select\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    isMulti={true}\n                    value={this.props.value}\n                    onChange={(e) => {\n                        this.props.onChange(e);\n                    }}\n                    isSearchable={cfg.searchable || false}\n                    isDisabled={cfg.disabled || false}\n                    noOptionsMessage={() => cfg.no_options_message || null}\n                    options={cfg.options}\n                />\n            </this.container>\n        );\n    }\n}\n\nexport default MultiSelectInput;\n"]}