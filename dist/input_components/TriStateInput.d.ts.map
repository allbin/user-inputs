{"version":3,"sources":["../src/input_components/TriStateInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,MAAM,WAAW,oBAAoB;IACjC,KAAK,EAAE,GAAG,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;CACjB;AACD,MAAM,WAAW,mBAAmB;IAChC,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,oBAAoB,EAAE,CAAC;IAChC,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,QAAQ,CAAC,EAAE,OAAO,CAAC;CACtB;AACD,MAAM,WAAW,kBAAkB;IAC/B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,MAAM,EAAE,mBAAmB,CAAC;IAC5B,QAAQ,EAAE,CAAC,MAAM,KAAA,KAAK,IAAI,CAAC;CAC9B;AAED,cAAM,aAAc,SAAQ,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;IAChF,SAAS,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC;gBAEtB,KAAK,KAAA;IAyCjB,MAAM;CAiCT;AAED,eAAe,aAAa,CAAC","file":"input_components/TriStateInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface TriStateInputOptions {\n    value: any;\n    label: string;\n}\nexport interface TriStateInputConfig {\n    label?: string;\n    options: TriStateInputOptions[];\n    placeholder?: string;\n    class_name?: string;\n    no_options_message?: string;\n    searchable?: boolean;\n    disabled?: boolean;\n}\nexport interface TriStateInputProps {\n    value?: string;\n    config: TriStateInputConfig;\n    onChange: (string) => void;\n}\n\nclass TriStateInput extends React.Component<TriStateInputProps, TriStateInputConfig> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n\n        this.container = styled.div `\n            text-align: left;\n            p.multi_select_label {\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                margin-bottom: 12px;\n                font-weight: bold;\n            }\n            .grid_block{\n                background-color: ${props => props.theme.colors.gray[3]};\n                text-align: center;\n                border-radius: 50px;\n                position: relative;\n                .grid_block_bg{\n                    background-color: ${props => props.theme.colors.blue[1]};\n                    position: absolute;\n                    border-radius: 50px;\n                    width: 33%;\n                    top: 0;\n                    bottom: 0;\n                    transition: all 0.4s;\n                }\n                .grid_item{\n                    position: relative;\n                    cursor: pointer;\n                    padding: 20px 0;\n                    font-size: 16px;\n                    display: inline-block;\n                    width: 33%;\n                    &.active{\n                        font-weight: bold;\n                        color: #fff;\n                    }\n                }\n            }\n        `;\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input tri_state_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        const LEFT_POSITION = cfg.options.findIndex(option => option.value === this.props.value);\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <div className=\"grid_block\">\n                    <div className=\"grid_block_bg\" style={{left: 33.333333333333 * LEFT_POSITION + '%'}}></div>\n                    {\n                        cfg.options.map((item, i) => {\n                            return (\n                                <div\n                                    key={i}\n                                    className={`grid_item ${this.props.value === item.value ? 'active' : ''}`}\n                                    onClick={() => {\n                                        this.props.onChange(item.value);\n                                    }}\n                                    >\n                                    <span>{item.label}</span>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </this.container>\n        );\n    }\n}\n\nexport default TriStateInput;\n"],"sourceRoot":"/source/"}