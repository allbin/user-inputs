{"version":3,"sources":["../src/input_components/TextInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,MAAM,WAAW,eAAe;IAC5B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,UAAU,CAAC,EAAE,MAAM,CAAC;CACvB;AACD,MAAM,WAAW,cAAc;IAC3B,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,eAAe,CAAC;IACxB,QAAQ,EAAE,CAAC,MAAM,KAAA,KAAK,IAAI,CAAC;CAC9B;AAED,cAAM,SAAU,SAAQ,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,eAAe,CAAC;IACpE,SAAS,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC;gBAEtB,KAAK,KAAA;IA0BjB,MAAM;CAmBT;AAED,eAAe,SAAS,CAAC","file":"input_components/TextInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport interface TextInputConfig {\n    label?: string;\n    class_name?: string;\n}\nexport interface TextInputProps {\n    value: string;\n    config: TextInputConfig;\n    onChange: (string) => void;\n}\n\nclass TextInput extends React.Component<TextInputProps, TextInputConfig> {\n    container: typeof React.Component;\n\n    constructor(props) {\n        super(props);\n\n        this.container = styled.div `\n            text-align: left;\n            p{\n                color: ${props => props.theme.colors.dark[1]};\n                font-size: 14px;\n                margin-bottom: 12px;\n                font-weight: bold;\n            }\n            input{\n                border: 2px solid ${props => props.theme.colors.gray[2]};\n                border-radius: 4px;\n                font-size: 16px;\n                padding: 8px 12px;\n                width: 100%;\n                transition: all 0.3s;\n                &:HOVER, &:FOCUS{\n                    border-color: ${props => props.theme.colors.brand[2]};\n                }\n            }\n        `;\n\n    }\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input multi_select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <this.container className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <input\n                    autoFocus={true}\n                    type=\"text\"\n                    value={this.props.value}\n                    onChange={e => this.props.onChange(e.target.value)}\n                />\n            </this.container>\n        );\n    }\n}\n\nexport default TextInput;\n"],"sourceRoot":"/source/"}