{"version":3,"sources":["../src/module/input_components/TextareaInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,MAAM,WAAW,mBAAmB;IAChC,IAAI,EAAE,UAAU,CAAC;IACjB,GAAG,EAAE,MAAM,CAAC;IACZ,aAAa,EAAE,MAAM,CAAC;IACtB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,IAAI,CAAC,EAAE,OAAO,CAAC;IACf,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC;CACtC;AACD,MAAM,WAAW,kBAAkB;IAC/B,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,mBAAmB,CAAC;IAC5B,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC;IAClC,SAAS,CAAC,EAAE,OAAO,CAAC;CACvB;AA0BD,cAAM,aAAc,SAAQ,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;IAEhF,QAAQ,CAAC,KAAK,EAAE,MAAM;IAYtB,MAAM;CAoBT;AAED,eAAe,aAAa,CAAC","file":"TextareaInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface TextareaInputConfig {\n    type: \"textarea\";\n    key: string;\n    default_value: string;\n    label?: string;\n    rows?: number;\n    placeholder?: string;\n    class_name?: string;\n    trim?: boolean;\n    onChange?: (value: string) => void;\n}\nexport interface TextareaInputProps {\n    value: string;\n    config: TextareaInputConfig;\n    onChange: (value: string) => void;\n    autofocus?: boolean;\n}\n\nlet default_config = {\n    rows: 3\n};\n\nconst TextareaInputContainer = styled.div `\n    text-align: left;\n    p {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n    textarea {\n        border: 2px solid ${props => props.theme.colors.gray[2]};\n        border-radius: 4px;\n        font-size: 16px;\n        padding: 8px 12px;\n        width: 100%;\n        &:HOVER, &:FOCUS {\n            border-color: ${props => props.theme.colors.brand[2]};\n        }\n    }\n`;\n\nclass TextareaInput extends React.Component<TextareaInputProps, TextareaInputConfig> {\n\n    onChange(value: string) {\n        const cfg = this.props.config;\n        this.props.onChange(value);\n        if (cfg.onChange) {\n            if (cfg.trim) {\n                cfg.onChange(value.trim());\n            } else {\n                cfg.onChange(value);\n            }\n        }\n    }\n\n    render() {\n        let cfg = Object.assign({}, default_config, this.props.config);\n        let class_names = \"user_input textarea_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <TextareaInputContainer className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <textarea\n                    rows={cfg.rows || 3}\n                    autoFocus={this.props.autofocus || false}\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={e => this.onChange(e.target.value)}>\n                </textarea>\n            </TextareaInputContainer>\n        );\n    }\n}\n\nexport default TextareaInput;\n"]}