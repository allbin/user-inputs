{"version":3,"sources":["../src/module/input_components/TriStateInput.tsx"],"names":[],"mappings":"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","file":"TriStateInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { TriStateInputOption } from '../.';\n\nexport interface TriStateInputConfig {\n    type: \"tri_state\";\n    key: string;\n    default_value: string|number;\n    label?: string;\n    options: TriStateInputOption[];\n    placeholder?: string;\n    class_name?: string;\n    no_options_message?: string;\n    searchable?: boolean;\n    disabled?: boolean;\n    message?: string;\n    /** TODO: Implement tooltip */\n    tooltip?: string;\n    onValueChange?: (value: string|number) => void;\n    validationCB?: (value: string|number) => null|string;\n}\nexport interface TriStateInputProps {\n    value: string|number;\n    config: TriStateInputConfig;\n    onChange: (value: string|number, cb: () => void) => void;\n    display_error_message: boolean;\n}\n\ninterface ContainerStyleProps {\n    valid: boolean;\n}\n\nconst TriStateInputContainer = styled(\"div\")<ContainerStyleProps> `\n    text-align: left;\n    p.tri_state_label {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n    p.message{\n        color: ${props => props.theme.colors.dark[2]};\n        font-size: 12px;\n        margin-bottom: 6px;\n        font-weight: normal;\n        font-style: italic;\n    }\n    p.validation_error{\n        color: ${props => props.theme.colors.red[0]};\n        font-size: 14px;\n        margin-bottom: 4px;\n        font-weight: bold;\n        font-style: italic;\n    }\n    .grid_block{\n        background-color: ${props => props.theme.colors.gray[3]};\n        text-align: center;\n        border-radius: 50px;\n        position: relative;\n        .grid_block_bg{\n            background-color: ${props => props.theme.colors.blue[1]};\n            position: absolute;\n            border-radius: 50px;\n            width: 33%;\n            top: 0;\n            bottom: 0;\n            transition: all 0.4s;\n        }\n        .grid_item{\n            position: relative;\n            cursor: pointer;\n            padding: 20px 0;\n            font-size: 16px;\n            display: inline-block;\n            width: 33%;\n            &.active{\n                font-weight: bold;\n                color: #fff;\n            }\n        }\n    }\n`;\n\nexport class Input extends React.Component<TriStateInputProps, TriStateInputConfig> {\n    onChange(value: string|number) {\n        const cfg = this.props.config;\n        this.props.onChange(value, () => {\n            let ext_value = convertInternalToExternalValue(cfg, value);\n            if (cfg.onValueChange && !validate(cfg, ext_value)) {\n                cfg.onValueChange(ext_value);\n            }\n        });\n    }\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input tri_state_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        const LEFT_POSITION = cfg.options.findIndex(option => option.value === this.props.value);\n\n        const validation_error = validate(cfg, this.props.value);\n\n        return (\n            <TriStateInputContainer\n                className={class_names}\n                valid={!validation_error || !this.props.display_error_message}\n            >\n                { cfg.label ? <p className=\"tri_state_label\">{ cfg.label }</p> : null }\n                { cfg.message ? <p className=\"message\">{ cfg.message }</p> : null }\n                { validation_error && this.props.display_error_message && validation_error.length > 0 ? <p className=\"validation_error\">{ validation_error }</p> : null }\n                <div className=\"grid_block\">\n                    <div className=\"grid_block_bg\" style={{left: 33.333333333333 * LEFT_POSITION + '%'}}></div>\n                    {\n                        cfg.options.map((item, i) => {\n                            return (\n                                <div\n                                    key={i}\n                                    className={`grid_item ${this.props.value === item.value ? 'active' : ''}`}\n                                    onClick={() => {\n                                        this.onChange(item.value);\n                                    }}\n                                    >\n                                    <span>{item.label}</span>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </TriStateInputContainer>\n        );\n    }\n}\n\nexport function validate(cfg: TriStateInputConfig, value: string|number): null|string {\n    if (cfg.validationCB) {\n        return cfg.validationCB(value);\n    }\n    return null;\n}\n\nexport function validateConfig(cfg: TriStateInputConfig): null|string {\n    if (validate(cfg, cfg.default_value)) {\n        return \"UserInput: Invalid default_value for TriState.\";\n    }\n\n    return null;\n}\n\nexport function convertInternalToExternalValue(cfg: TriStateInputConfig, value: string|number): string|number {\n    return value;\n}\n\nexport function convertExternalToInternalValue(cfg: TriStateInputConfig, value: string|number): string|number {\n    return value;\n}"]}