{"version":3,"sources":["../src/module/input_components/SelectInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAK/B,MAAM,WAAW,iBAAiB;IAC9B,IAAI,EAAE,QAAQ,CAAC;IACf,GAAG,EAAE,MAAM,CAAC;IACZ,aAAa,EAAE,MAAM,GAAC,MAAM,CAAC;IAC7B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,YAAY,EAAE,CAAC;IACxB,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,GAAC,MAAM,KAAK,IAAI,CAAC;CAC7C;AACD,MAAM,WAAW,gBAAgB;IAC7B,KAAK,CAAC,EAAE,YAAY,CAAC;IACrB,MAAM,EAAE,iBAAiB,CAAC;IAC1B,QAAQ,EAAE,CAAC,KAAK,EAAE,YAAY,KAAK,IAAI,CAAC;CAC3C;AAYD,cAAM,WAAY,SAAQ,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAEvD,QAAQ,CAAC,KAAK,EAAE,YAAY;IAO5B,MAAM;CAwBT;AAED,eAAe,WAAW,CAAC","file":"SelectInput.d.ts","sourcesContent":["import * as React from 'react';\nimport styled from '../styling';\nimport Select from 'react-select';\n\n\nexport interface SelectInputConfig {\n    type: \"select\";\n    key: string;\n    default_value: string|number;\n    label?: string;\n    options: SelectOption[];\n    placeholder?: string;\n    class_name?: string;\n    no_options_message?: string;\n    searchable?: boolean;\n    disabled?: boolean;\n    onChange?: (value: string|number) => void;\n}\nexport interface SelectInputProps {\n    value?: SelectOption;\n    config: SelectInputConfig;\n    onChange: (value: SelectOption) => void;\n}\n\nconst SelectInputContainer = styled.div `\n    text-align: left;\n    p.multi_select_label {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n`;\n\nclass SelectInput extends React.Component<SelectInputProps> {\n\n    onChange(value: SelectOption) {\n        const cfg = this.props.config;\n        this.props.onChange(value);\n        if (cfg.onChange) {\n            cfg.onChange(value.value);\n        }\n    }\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <SelectInputContainer className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <Select\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={(e) => {\n                        this.onChange(e as SelectOption);\n                    }}\n                    isDisabled={cfg.disabled || false}\n                    isSearchable={cfg.searchable || false}\n                    noOptionsMessage={() => cfg.no_options_message || null}\n                    options={cfg.options}\n                />\n            </SelectInputContainer>\n        );\n    }\n}\n\nexport default SelectInput;\n"]}