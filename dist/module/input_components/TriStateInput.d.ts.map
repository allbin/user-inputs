{"version":3,"sources":["../src/module/input_components/TriStateInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,MAAM,CAAC;AAE3C,MAAM,WAAW,mBAAmB;IAChC,IAAI,EAAE,WAAW,CAAC;IAClB,GAAG,EAAE,MAAM,CAAC;IACZ,aAAa,EAAE,MAAM,GAAC,MAAM,CAAC;IAC7B,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,mBAAmB,EAAE,CAAC;IAC/B,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,8BAA8B;IAC9B,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,aAAa,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,GAAC,MAAM,KAAK,IAAI,CAAC;IAC/C,YAAY,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,GAAC,MAAM,KAAK,IAAI,GAAC,MAAM,CAAC;CACxD;AACD,MAAM,WAAW,kBAAkB;IAC/B,KAAK,EAAE,MAAM,GAAC,MAAM,CAAC;IACrB,MAAM,EAAE,mBAAmB,CAAC;IAC5B,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,GAAC,MAAM,EAAE,EAAE,EAAE,MAAM,IAAI,KAAK,IAAI,CAAC;IACzD,qBAAqB,EAAE,OAAO,CAAC;CAClC;AA0DD,qBAAa,KAAM,SAAQ,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;IAC/E,QAAQ,CAAC,KAAK,EAAE,MAAM,GAAC,MAAM;IAS7B,MAAM;CAwCT;AAED,wBAAgB,QAAQ,CAAC,GAAG,EAAE,mBAAmB,EAAE,KAAK,EAAE,MAAM,GAAC,MAAM,GAAG,IAAI,GAAC,MAAM,CAKpF;AAED,wBAAgB,cAAc,CAAC,GAAG,EAAE,mBAAmB,GAAG,IAAI,GAAC,MAAM,CAMpE;AAED,wBAAgB,8BAA8B,CAAC,GAAG,EAAE,mBAAmB,EAAE,KAAK,EAAE,MAAM,GAAC,MAAM,GAAG,MAAM,GAAC,MAAM,CAE5G;AAED,wBAAgB,8BAA8B,CAAC,GAAG,EAAE,mBAAmB,EAAE,KAAK,EAAE,MAAM,GAAC,MAAM,GAAG,MAAM,GAAC,MAAM,CAE5G","file":"TriStateInput.d.ts","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TriStateInputOption } from '../.';\r\n\r\nexport interface TriStateInputConfig {\r\n    type: \"tri_state\";\r\n    key: string;\r\n    default_value: string|number;\r\n    label?: string;\r\n    options: TriStateInputOption[];\r\n    placeholder?: string;\r\n    class_name?: string;\r\n    no_options_message?: string;\r\n    searchable?: boolean;\r\n    disabled?: boolean;\r\n    message?: string;\r\n    /** TODO: Implement tooltip */\r\n    tooltip?: string;\r\n    onValueChange?: (value: string|number) => void;\r\n    validationCB?: (value: string|number) => null|string;\r\n}\r\nexport interface TriStateInputProps {\r\n    value: string|number;\r\n    config: TriStateInputConfig;\r\n    onChange: (value: string|number, cb: () => void) => void;\r\n    display_error_message: boolean;\r\n}\r\n\r\ninterface ContainerStyleProps {\r\n    valid: boolean;\r\n}\r\n\r\nconst TriStateInputContainer = styled(\"div\")<ContainerStyleProps> `\r\n    text-align: left;\r\n    margin-bottom: ${props => props.theme.components.form.user_input.margin_bottom}px;\r\n    p.tri_state_label {\r\n        color: ${props => props.theme.colors.dark[1]};\r\n        font-size: 14px;\r\n        margin-bottom: 12px;\r\n        font-weight: bold;\r\n    }\r\n    p.message{\r\n        color: ${props => props.theme.colors.dark[2]};\r\n        font-size: 12px;\r\n        margin-bottom: 6px;\r\n        font-weight: normal;\r\n        font-style: italic;\r\n    }\r\n    p.validation_error{\r\n        color: ${props => props.theme.colors.red[0]};\r\n        font-size: 14px;\r\n        margin-bottom: 4px;\r\n        font-weight: bold;\r\n        font-style: italic;\r\n    }\r\n    .grid_block{\r\n        background-color: ${props => props.theme.colors.gray[3]};\r\n        text-align: center;\r\n        border-radius: 50px;\r\n        position: relative;\r\n        .grid_block_bg{\r\n            background-color: ${props => props.theme.colors.blue[1]};\r\n            position: absolute;\r\n            border-radius: 50px;\r\n            width: 33%;\r\n            top: 0;\r\n            bottom: 0;\r\n            transition: all 0.4s;\r\n        }\r\n        .grid_item{\r\n            position: relative;\r\n            cursor: pointer;\r\n            padding: 20px 0;\r\n            font-size: 16px;\r\n            display: inline-block;\r\n            width: 33%;\r\n            &.active{\r\n                font-weight: bold;\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Input extends React.Component<TriStateInputProps, TriStateInputConfig> {\r\n    onChange(value: string|number) {\r\n        const cfg = this.props.config;\r\n        this.props.onChange(value, () => {\r\n            let ext_value = convertInternalToExternalValue(cfg, value);\r\n            if (cfg.onValueChange && !validate(cfg, ext_value)) {\r\n                cfg.onValueChange(ext_value);\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        let cfg = this.props.config;\r\n        let class_names = \"user_input tri_state_input\";\r\n        if (cfg.class_name) {\r\n            class_names += \" \" + cfg.class_name;\r\n        }\r\n\r\n        const LEFT_POSITION = cfg.options.findIndex(option => option.value === this.props.value);\r\n\r\n        const validation_error = validate(cfg, this.props.value);\r\n\r\n        return (\r\n            <TriStateInputContainer\r\n                className={class_names}\r\n                valid={!validation_error || !this.props.display_error_message}\r\n            >\r\n                { cfg.label ? <p className=\"tri_state_label\">{ cfg.label }</p> : null }\r\n                { cfg.message ? <p className=\"message\">{ cfg.message }</p> : null }\r\n                { validation_error && this.props.display_error_message && validation_error.length > 0 ? <p className=\"validation_error\">{ validation_error }</p> : null }\r\n                <div className=\"grid_block\">\r\n                    <div className=\"grid_block_bg\" style={{left: 33.333333333333 * LEFT_POSITION + '%'}}></div>\r\n                    {\r\n                        cfg.options.map((item, i) => {\r\n                            return (\r\n                                <div\r\n                                    key={i}\r\n                                    className={`grid_item ${this.props.value === item.value ? 'active' : ''}`}\r\n                                    onClick={() => {\r\n                                        this.onChange(item.value);\r\n                                    }}\r\n                                    >\r\n                                    <span>{item.label}</span>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </TriStateInputContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport function validate(cfg: TriStateInputConfig, value: string|number): null|string {\r\n    if (cfg.validationCB) {\r\n        return cfg.validationCB(value);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function validateConfig(cfg: TriStateInputConfig): null|string {\r\n    if (validate(cfg, cfg.default_value)) {\r\n        return \"UserInput: Invalid default_value for TriState.\";\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function convertInternalToExternalValue(cfg: TriStateInputConfig, value: string|number): string|number {\r\n    return value;\r\n}\r\n\r\nexport function convertExternalToInternalValue(cfg: TriStateInputConfig, value: string|number): string|number {\r\n    return value;\r\n}\r\n"]}