{"version":3,"sources":["../src/module/input_components/TextareaInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAsBvC,IAAI,cAAc,GAAG;IACjB,IAAI,EAAE,CAAC;CACV,CAAC;AAEF,MAAM,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC;;;iBAGzB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;4BAMxB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;4BAMnC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;;CAG/D,CAAC;AAEF,MAAM,aAAc,SAAQ,KAAK,CAAC,SAAkD;IAEhF,QAAQ,CAAC,KAAa;QAClB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,GAAG,CAAC,QAAQ,EAAE;YACd,IAAI,GAAG,CAAC,IAAI,EAAE;gBACV,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aAC9B;iBAAM;gBACH,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACvB;SACJ;IACL,CAAC;IAED,MAAM;QACF,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,WAAW,GAAG,2BAA2B,CAAC;QAC9C,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,sBAAsB,IAAC,SAAS,EAAE,WAAW;YACxC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,+BAAK,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACzC,kCACI,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,EACnB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,EACxC,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAC3E,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GACrC,CACU,CAC5B,CAAC;IACN,CAAC;CACJ;AAED,eAAe,aAAa,CAAC","file":"TextareaInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\n// this.props has everything passed in to config.props as well as the full config object in this.props.config.\n\nexport interface TextareaInputConfig {\n    type: \"textarea\";\n    key: string;\n    default_value: string;\n    label?: string;\n    rows?: number;\n    placeholder?: string;\n    class_name?: string;\n    trim?: boolean;\n    onChange?: (value: string) => void;\n}\nexport interface TextareaInputProps {\n    value: string;\n    config: TextareaInputConfig;\n    onChange: (value: string) => void;\n    autofocus?: boolean;\n}\n\nlet default_config = {\n    rows: 3\n};\n\nconst TextareaInputContainer = styled.div `\n    text-align: left;\n    p {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n    textarea {\n        border: 2px solid ${props => props.theme.colors.gray[2]};\n        border-radius: 4px;\n        font-size: 16px;\n        padding: 8px 12px;\n        width: 100%;\n        &:HOVER, &:FOCUS {\n            border-color: ${props => props.theme.colors.brand[2]};\n        }\n    }\n`;\n\nclass TextareaInput extends React.Component<TextareaInputProps, TextareaInputConfig> {\n\n    onChange(value: string) {\n        const cfg = this.props.config;\n        this.props.onChange(value);\n        if (cfg.onChange) {\n            if (cfg.trim) {\n                cfg.onChange(value.trim());\n            } else {\n                cfg.onChange(value);\n            }\n        }\n    }\n\n    render() {\n        let cfg = Object.assign({}, default_config, this.props.config);\n        let class_names = \"user_input textarea_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <TextareaInputContainer className={class_names}>\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <textarea\n                    rows={cfg.rows || 3}\n                    autoFocus={this.props.autofocus || false}\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={e => this.onChange(e.target.value)}>\n                </textarea>\n            </TextareaInputContainer>\n        );\n    }\n}\n\nexport default TextareaInput;\n"]}