{"version":3,"sources":["../src/module/input_components/TextareaInput.tsx"],"names":[],"mappings":"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","file":"TextareaInput.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport interface TextareaInputConfig {\n    type: \"textarea\";\n    key: string;\n    default_value: string;\n    label?: string;\n    rows?: number;\n    placeholder?: string;\n    class_name?: string;\n    trim?: boolean;\n    message?: string;\n    /** TODO: Implement tooltip */\n    tooltip?: string;\n    onValueChange?: (value: string) => void;\n    validationCB?: (value: string) => null|string;\n}\nexport interface TextareaInputProps {\n    value: string;\n    config: TextareaInputConfig;\n    onChange: (value: string, cb: () => void) => void;\n    display_error_message: boolean;\n    autofocus?: boolean;\n}\n\nlet default_config = {\n    rows: 3\n};\n\ninterface ContainerStyleProps {\n    valid: boolean;\n}\n\nconst TextareaInputContainer = styled(\"div\")<ContainerStyleProps> `\n    text-align: left;\n    p {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n    p.message{\n        color: ${props => props.theme.colors.dark[2]};\n        font-size: 12px;\n        margin-bottom: 6px;\n        font-weight: normal;\n        font-style: italic;\n    }\n    p.validation_error{\n        color: ${props => props.theme.colors.red[0]};\n        font-size: 14px;\n        margin-bottom: 4px;\n        font-weight: bold;\n        font-style: italic;\n    }\n    textarea {\n        background-color: ${props => !props.valid ? \"rgba(255,0,0,0.1)\" : \"\" };\n        border: 2px solid ${props => !props.valid ? props.theme.colors.error : props.theme.colors.gray[2]};\n        border-radius: 4px;\n        font-size: 16px;\n        padding: 8px 12px;\n        width: 100%;\n        &:HOVER, &:FOCUS {\n            border-color: ${props => !props.valid ? props.theme.colors.error : props.theme.colors.brand[2]};\n        }\n    }\n`;\n\nexport class Input extends React.Component<TextareaInputProps, TextareaInputConfig> {\n\n    onChange(value: string) {\n        const cfg = this.props.config;\n        this.props.onChange(value, () => {\n            let ext_value = convertInternalToExternalValue(cfg, value);\n            if (cfg.onValueChange && !validate(cfg, ext_value)) {\n                cfg.onValueChange(ext_value);\n            }\n        });\n    }\n\n    render() {\n        let cfg = Object.assign({}, default_config, this.props.config);\n        let class_names = \"user_input textarea_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        const validation_error = validate(cfg, this.props.value);\n\n        return (\n            <TextareaInputContainer\n                className={class_names}\n                valid={!validation_error || !this.props.display_error_message}\n            >\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                { cfg.message ? <p className=\"message\">{ cfg.message }</p> : null }\n                { validation_error && this.props.display_error_message && validation_error.length > 0 ? <p className=\"validation_error\">{ validation_error }</p> : null }\n                <textarea\n                    rows={cfg.rows}\n                    autoFocus={this.props.autofocus || false}\n                    placeholder={cfg.placeholder ? cfg.placeholder : ''}\n                    value={this.props.value}\n                    onChange={e => this.onChange(e.target.value)}\n                />\n            </TextareaInputContainer>\n        );\n    }\n}\n\nexport function validate(cfg: TextareaInputConfig, value: string): null|string {\n    if (cfg.validationCB) {\n        return cfg.validationCB(value);\n    }\n    return null;\n}\n\nexport function validateConfig(cfg: TextareaInputConfig): null|string {\n\n    return null;\n}\n\nexport function convertInternalToExternalValue(cfg: TextareaInputConfig, value: string): string {\n    if (cfg.trim) {\n        return value.trim();\n    }\n    return value;\n}\n\nexport function convertExternalToInternalValue(cfg: TextareaInputConfig, value: string|number): string {\n    return value.toString();\n}"]}