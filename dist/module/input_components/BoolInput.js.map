{"version":3,"sources":["../src/module/input_components/BoolInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,YAAY,CAAC;AAuBhC,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,CAA0B;;;;;;;;iBAQjD,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;;;;;;;;;kBAclC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU;;4BAEf,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;4BAClC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;;;;4BAIlC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;sCAE1B,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;0CAI/B,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;gCAK9C,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;sCAE9B,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAClD,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU;;;;;;;;;;;;qBAY5B,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU;sBACxB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU;;;CAG9C,CAAC;AAEF,MAAM,SAAU,SAAQ,KAAK,CAAC,SAA8B;IACxD,QAAQ,CAAC,KAAc;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,GAAG,CAAC,QAAQ,EAAE;YACd,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACvB;IACL,CAAC;IACD,MAAM;QACF,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,WAAW,GAAG,uBAAuB,CAAC;QAC1C,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,kBAAkB,IACf,SAAS,EAAE,WAAW,EACtB,UAAU,EAAE,EAAE;YAEZ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,+BAAK,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACzC,6BAAK,SAAS,EAAC,YAAY;gBACvB,6BACI,SAAS,EAAE,cAAc,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EACpE,OAAO,EAAE,GAAG,EAAE;wBACV,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,6BAAK,SAAS,EAAC,kBAAkB,GAE3B,CACJ,CACJ,CACW,CACxB,CAAC;IACN,CAAC;CACJ;AAED,eAAe,SAAS,CAAC","file":"BoolInput.js","sourcesContent":["import * as React from 'react';\nimport styled from '../styling';\n\nexport interface BoolInputConfig {\n    type: \"bool\";\n    key: string;\n    default_value: string;\n    label?: string;\n    class_name?: string;\n    onChange?: (value: boolean) => void;\n}\nexport interface BoolInputProps {\n    type: \"bool\";\n    key: string;\n    value: boolean;\n    config: BoolInputConfig;\n    onChange: (checked: boolean) => void;\n}\n\ninterface BoolInputContainerProps {\n    //TODO: What is thing_size?\n    thing_size: number;\n}\n\nconst BoolInputContainer = styled(\"div\")<BoolInputContainerProps> `\n    text-align: left;\n    padding: 16px 20px !important;\n    p, .bool_block, .bool_input{\n        vertical-align: middle;\n        display: inline-block;\n    }\n    p{\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        font-weight: bold;\n        width: 60%;\n        overflow: hidden;\n    }\n    .bool_block{\n        width: 40%;\n        text-align: right;\n    }\n    .bool_input{\n        cursor: pointer;\n        border-radius: 100px;\n        width: 60px;\n        height: ${props => props.thing_size}px;\n        position: relative;\n        border: 2px solid ${props => props.theme.colors.border};\n        background-color: ${props => props.theme.colors.border};\n        box-sizing: content-box;\n        transition: all 0.3s;\n        &:HOVER{\n            border-color: ${props => props.theme.colors.brand[2]};\n            .bool_input_thing{\n                //background-color: ${props => props.theme.colors.dark[2]};\n            }\n            &.active{\n                .bool_input_thing{\n                    //background-color: ${props => props.theme.colors.brand[2]};\n                }\n            }\n        }\n        &.active{\n            background-color: ${props => props.theme.colors.brand[1]};\n            .bool_input_thing{\n                //background-color: ${props => props.theme.colors.brand[1]};\n                left: ${props => props.thing_size}px;\n                top: 0;\n            }\n        }\n        .bool_input_thing{\n            transition: all 0.4s;\n            position: absolute;\n            left: 0;\n            top: 0;\n            background-color: #fff;\n            box-shadow: 0 1px 4px rgba(0,0,0,0.5);\n            border-radius: 50%;\n            width: ${props => props.thing_size}px;\n            height: ${props => props.thing_size}px;\n        }\n    }\n`;\n\nclass BoolInput extends React.Component<BoolInputProps, any> {\n    onChange(value: boolean) {\n        const cfg = this.props.config;\n        this.props.onChange(value);\n        if (cfg.onChange) {\n            cfg.onChange(value);\n        }\n    }\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input bool_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <BoolInputContainer\n                className={class_names}\n                thing_size={30}\n            >\n                { cfg.label ? <p>{ cfg.label }</p> : null }\n                <div className=\"bool_block\">\n                    <div\n                        className={`bool_input ${this.props.value === true ? 'active' : ''}`}\n                        onClick={() => {\n                            this.onChange(!this.props.value);\n                        }}>\n                        <div className=\"bool_input_thing\">\n\n                        </div>\n                    </div>\n                </div>\n            </BoolInputContainer>\n        );\n    }\n}\n\nexport default BoolInput;\n"]}