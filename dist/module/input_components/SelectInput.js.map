{"version":3,"sources":["../src/module/input_components/SelectInput.tsx"],"names":[],"mappings":"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","file":"SelectInput.js","sourcesContent":["import * as React from 'react';\r\nimport styled from '../styling';\r\nimport Select from 'react-select';\r\nimport { SelectOption } from '../.';\r\n\r\nexport interface SelectInputConfig {\r\n    type: \"select\";\r\n    key: string;\r\n    default_value: string|number;\r\n    label?: string;\r\n    options: SelectOption[];\r\n    placeholder?: string;\r\n    class_name?: string;\r\n    no_options_message?: string;\r\n    searchable?: boolean;\r\n    disabled?: boolean;\r\n    message?: string;\r\n    /** TODO: Implement tooltip */\r\n    tooltip?: string;\r\n    onValueChange?: (value: string|number) => void;\r\n    validationCB?: (value: string|number) => null|string;\r\n}\r\nexport interface SelectInputProps {\r\n    value: SelectOption;\r\n    config: SelectInputConfig;\r\n    onChange: (value: SelectOption, cb: () => void ) => void;\r\n    display_error_message: boolean;\r\n}\r\n\r\ninterface ContainerStyleProps {\r\n    valid: boolean;\r\n}\r\n\r\nconst SelectInputContainer = styled(\"div\")<ContainerStyleProps> `\r\n    text-align: left;\r\n    margin-bottom: ${props => props.theme.components.form.user_input.margin_bottom}px;\r\n    p.message{\r\n        color: ${props => props.theme.colors.dark[2]};\r\n        font-size: 12px;\r\n        margin-bottom: 6px;\r\n        font-weight: normal;\r\n        font-style: italic;\r\n    }\r\n    p.validation_error{\r\n        color: ${props => props.theme.colors.red[0]};\r\n        font-size: 14px;\r\n        margin-bottom: 4px;\r\n        font-weight: bold;\r\n        font-style: italic;\r\n    }\r\n    p.select_label {\r\n        color: ${props => props.theme.colors.dark[1]};\r\n        font-size: 14px;\r\n        margin-bottom: 12px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nexport class Input extends React.Component<SelectInputProps> {\r\n\r\n    onChange(value: SelectOption) {\r\n        const cfg = this.props.config;\r\n        this.props.onChange(value, () => {\r\n            let ext_value = convertInternalToExternalValue(cfg, value);\r\n            if (cfg.onValueChange && !validate(cfg, ext_value)) {\r\n                cfg.onValueChange(ext_value);\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        let cfg = this.props.config;\r\n        let class_names = \"user_input select_input\";\r\n        if (cfg.class_name) {\r\n            class_names += \" \" + cfg.class_name;\r\n        }\r\n\r\n        const validation_error = validate(cfg, this.props.value.value);\r\n\r\n        return (\r\n            <SelectInputContainer\r\n                className={class_names}\r\n                valid={!validation_error || !this.props.display_error_message}\r\n            >\r\n                { cfg.label ? <p className=\"select_label\">{ cfg.label }</p> : null }\r\n                { cfg.message ? <p className=\"message\">{ cfg.message }</p> : null }\r\n                { validation_error && this.props.display_error_message && validation_error.length > 0 ? <p className=\"validation_error\">{ validation_error }</p> : null }\r\n                <Select\r\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\r\n                    value={this.props.value}\r\n                    onChange={(e) => {\r\n                        this.onChange(e as SelectOption);\r\n                    }}\r\n                    isDisabled={cfg.disabled || false}\r\n                    isSearchable={cfg.searchable || false}\r\n                    noOptionsMessage={() => cfg.no_options_message || null}\r\n                    options={cfg.options}\r\n                />\r\n            </SelectInputContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport function validate(cfg: SelectInputConfig, value: string|number): string|null {\r\n    if (cfg.validationCB) {\r\n        return cfg.validationCB(value);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function validateConfig(cfg: SelectInputConfig): null|string {\r\n    if (validate(cfg, cfg.default_value)) {\r\n        return \"UserInput: Invalid default_value for Select.\";\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function convertInternalToExternalValue(cfg: SelectInputConfig, value: SelectOption): string|number {\r\n    return value.value;\r\n}\r\n\r\nexport function convertExternalToInternalValue(cfg: SelectInputConfig, value: string|number): SelectOption {\r\n    let selected_option = cfg.options.find(option => value === option.value);\r\n    if (!selected_option) {\r\n        throw new Error(\"UserInput: Default value for select not present in options.\");\r\n    }\r\n    return selected_option;\r\n}\r\n"]}