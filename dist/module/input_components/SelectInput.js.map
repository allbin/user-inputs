{"version":3,"sources":["../src/module/input_components/SelectInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,YAAY,CAAC;AAChC,OAAO,MAAM,MAAM,cAAc,CAAC;AAsBlC,MAAM,oBAAoB,GAAG,MAAM,CAAC,GAAG,CAAC;;;iBAGvB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;CAKnD,CAAC;AAEF,MAAM,WAAY,SAAQ,KAAK,CAAC,SAA2B;IAEvD,QAAQ,CAAC,KAAmB;QACxB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,GAAG,CAAC,QAAQ,EAAE;YACd,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC7B;IACL,CAAC;IACD,MAAM;QACF,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,WAAW,GAAG,yBAAyB,CAAC;QAC5C,IAAI,GAAG,CAAC,UAAU,EAAE;YAChB,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;SACvC;QAED,OAAO,CACH,oBAAC,oBAAoB,IAAC,SAAS,EAAE,WAAW;YACtC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,2BAAG,SAAS,EAAC,oBAAoB,IAAG,GAAG,CAAC,KAAK,CAAM,CAAC,CAAC,CAAC,IAAI;YACxE,oBAAC,MAAM,IACH,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAC3E,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;oBACZ,IAAI,CAAC,QAAQ,CAAC,CAAiB,CAAC,CAAC;gBACrC,CAAC,EACD,UAAU,EAAE,GAAG,CAAC,QAAQ,IAAI,KAAK,EACjC,YAAY,EAAE,GAAG,CAAC,UAAU,IAAI,KAAK,EACrC,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,kBAAkB,IAAI,IAAI,EACtD,OAAO,EAAE,GAAG,CAAC,OAAO,GACtB,CACiB,CAC1B,CAAC;IACN,CAAC;CACJ;AAED,eAAe,WAAW,CAAC","file":"SelectInput.js","sourcesContent":["import * as React from 'react';\nimport styled from '../styling';\nimport Select from 'react-select';\n\n\nexport interface SelectInputConfig {\n    type: \"select\";\n    key: string;\n    default_value: string|number;\n    label?: string;\n    options: SelectOption[];\n    placeholder?: string;\n    class_name?: string;\n    no_options_message?: string;\n    searchable?: boolean;\n    disabled?: boolean;\n    onChange?: (value: string|number) => void;\n}\nexport interface SelectInputProps {\n    value?: SelectOption;\n    config: SelectInputConfig;\n    onChange: (value: SelectOption) => void;\n}\n\nconst SelectInputContainer = styled.div `\n    text-align: left;\n    p.multi_select_label {\n        color: ${props => props.theme.colors.dark[1]};\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: bold;\n    }\n`;\n\nclass SelectInput extends React.Component<SelectInputProps> {\n\n    onChange(value: SelectOption) {\n        const cfg = this.props.config;\n        this.props.onChange(value);\n        if (cfg.onChange) {\n            cfg.onChange(value.value);\n        }\n    }\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input select_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n\n        return (\n            <SelectInputContainer className={class_names}>\n                { cfg.label ? <p className=\"multi_select_label\">{ cfg.label }</p> : null }\n                <Select\n                    placeholder={cfg.placeholder ? cfg.placeholder : cfg.label ? cfg.label : '' }\n                    value={this.props.value}\n                    onChange={(e) => {\n                        this.onChange(e as SelectOption);\n                    }}\n                    isDisabled={cfg.disabled || false}\n                    isSearchable={cfg.searchable || false}\n                    noOptionsMessage={() => cfg.no_options_message || null}\n                    options={cfg.options}\n                />\n            </SelectInputContainer>\n        );\n    }\n}\n\nexport default SelectInput;\n"]}