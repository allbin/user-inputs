{"version":3,"sources":["../src/module/input_components/Button.tsx"],"names":[],"mappings":"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","file":"Button.js","sourcesContent":["import * as React from 'react';\nimport styled from '../styling';\nexport interface ButtonConfig {\n    type: \"button\"|\"confirm\";\n    key: string;\n    label: string;\n    default_value: any;\n    class_name?: string;\n    big?: boolean;\n    /** Should the buttons background color be filled in or transparent? Default true. */\n    filled?: boolean;\n    disabled?: boolean;\n    dark?: boolean;\n    light?: boolean;\n    red?: boolean;\n    green?: boolean;\n    teal?: boolean;\n    block?: boolean;\n    autofocus?: boolean;\n    onClick?: () => void;\n    onValueChange?: () => void;\n}\nexport interface ButtonProps {\n    config: ButtonConfig;\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n    onClick: () => void;\n    disabled: boolean;\n}\ninterface ContainerStyleProps {\n    filled: boolean;\n    block: boolean;\n}\n\nconst ButtonContainer = styled(\"button\")<ContainerStyleProps> `\n    font-size: 14px;\n    user-select: none;\n    border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.brand[0]};\n    display: ${props => props.block ? 'block' : 'inline-block'};\n    width: ${props => props.block ? '100%' : 'unset'};\n    cursor: pointer;\n    border-radius: 200px;\n    background-color: ${props => props.filled ? props.theme.colors.brand[0] : 'transparent'};\n    color: #fff;\n    text-align: center;\n    padding: 12px 20px;\n    font-weight: bold;\n    transition: all 0.3s;\n    &.big{\n        padding: 20px 44px;\n    }\n    &.disabled{\n        pointer-events: none;\n        opacity: 0.4;\n    }\n    &.light{\n        background-color: ${props => props.filled ? props.theme.colors.brand[1] : 'transparent'};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.brand[1]};\n    }\n    &.dark{\n        background-color: ${props => props.filled ? props.theme.colors.dark[0] : 'transparent'};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.dark[0]};\n        &:HOVER{\n            background-color: ${props => props.filled ? props.theme.colors.dark[2] : props.theme.colors.dark[2]};\n            border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.dark[2]};\n        }\n    }\n    &.red{\n        background-color: ${props => props.filled ? props.theme.colors.red[1] : 'transparent'};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.red[1]};\n        &:HOVER{\n            background-color: ${props => props.filled ? props.theme.colors.red[3] : props.theme.colors.red[0]};\n            border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.red[0]};\n        }\n    }\n    &.green{\n        background-color: ${props => props.filled ? props.theme.colors.green[1] : 'transparent'};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.green[1]};\n        &:HOVER{\n            background-color: ${props => props.filled ? props.theme.colors.green[2] : props.theme.colors.green[2]};\n            border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.green[2]};\n        }\n    }\n    &.teal{\n        background-color: ${props => props.filled ? props.theme.colors.teal[1] : 'transparent'};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.teal[1]};\n        &:HOVER{\n            background-color: ${props => props.filled ? props.theme.colors.teal[2] : props.theme.colors.teal[2]};\n            border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.teal[2]};\n        }\n    }\n    &:HOVER{\n        background-color: ${props => props.filled ? props.theme.colors.brand[2] : props.theme.colors.brand[0]};\n        border: ${props => props.filled ? 'none' : '1px solid ' + props.theme.colors.brand[0]};\n        box-shadow: 0 4px 5px rgba(0,0,0,0.1);\n    }\n`;\n\n\nexport class Input extends React.Component<ButtonProps, any> {\n\n    render() {\n        let cfg = this.props.config;\n        let class_names = \"user_input button_input\";\n        if (cfg.class_name) {\n            class_names += \" \" + cfg.class_name;\n        }\n        let classes = [];\n        if (cfg.dark) { classes.push('dark'); }\n        if (cfg.light) { classes.push('light'); }\n        if (cfg.red) { classes.push('red'); }\n        if (cfg.green) { classes.push('green'); }\n        if (cfg.teal) { classes.push('teal'); }\n        if (cfg.disabled || this.props.disabled) { classes.push('disabled'); }\n        if (cfg.big) { classes.push('big'); }\n        class_names += \" \" + classes.join(\" \");\n\n        return (\n            <ButtonContainer\n                onMouseEnter={() => this.props.onMouseEnter ? this.props.onMouseEnter() : null}\n                onMouseLeave={() => this.props.onMouseLeave ? this.props.onMouseLeave() : null}\n                block={(cfg.block) ? true : false}\n                filled={(cfg.filled === false) ? false : true}\n                disabled={this.props.disabled || cfg.disabled || false}\n                autoFocus={cfg.autofocus || false}\n                className={class_names}\n                onClick={() => this.props.onClick()}\n            >\n                {cfg.label}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport function validate(cfg: ButtonConfig, value: any): null|string {\n    return null;\n}\n\nexport function validateConfig(cfg: ButtonConfig): null|string {\n    if (validate(cfg, cfg.default_value)) {\n        return \"UserInput: Invalid default_value for Button.\";\n    }\n\n    return null;\n}\n\nexport function getParsedValue(cfg: ButtonConfig, value: any): any {\n    return null;\n}"]}