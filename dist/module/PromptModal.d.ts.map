{"version":3,"sources":["../src/module/PromptModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,EAAE,sBAAsB,EAAE,MAAM,GAAG,CAAC;AAS3C,MAAM,WAAW,UAAU;IACvB,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,SAAS,EAAE,MAAM,IAAI,CAAC;IACtB,QAAQ,EAAE,MAAM,IAAI,CAAC;IACrB,aAAa,EAAE,sBAAsB,CAAC;IACtC,eAAe,EAAE,OAAO,CAAC;IACzB,gBAAgB,EAAE,OAAO,CAAC;IAC1B,oBAAoB,CAAC,EAAE,MAAM,CAAC;IAC9B,mBAAmB,CAAC,EAAE,MAAM,CAAC;CAChC;AAwHD,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,GAAG,CAAC;IAC/D,IAAI,EAAE,IAAI,GAAG,IAAI,CAAQ;IAEzB,kBAAkB;IAqBlB,mBAAmB;IAsBnB,MAAM;CA8BT","file":"PromptModal.d.ts","sourcesContent":["import * as React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport oh from 'output-helpers';\nimport Button from './input_components/Button';\nimport Form from './Form';\nimport { PromptInputConfigArray } from '.';\n\n//These are require because build engine doesn't like 'import ... .svg'.\nlet SymbolClone = require('./img/symbol_clone.svg');\nlet SymbolDelete = require('./img/symbol_delete.svg');\nlet SymbolArchive = require('./img/symbol_archive.svg');\nlet SymbolNewDoc = require('./img/symbol_new_doc.svg');\nlet SymbolNewFolder = require('./img/symbol_new_folder.svg');\n\nexport interface ModalProps {\n    title: string;\n    message: string;\n    class: string;\n    confirmCB: () => void;\n    cancelCB: () => void;\n    input_configs: PromptInputConfigArray;\n    show_cancel_btn: boolean;\n    show_confirm_btn: boolean;\n    confirm_button_label?: string;\n    cancel_button_label?: string;\n}\n\nconst modal_animate_down = keyframes`\n    from {\n        transform: rotateX(1deg) translateY(-30px);\n    }\n    to {\n        opacity: 1;\n        transform: rotateX(0) translateY(0);\n    }\n`;\n\nconst ModalContainer = styled.div `\n    @media (max-width: 700px) {\n        .modal_container {\n            .modal_box {\n                width: 100% !important;\n                top: 0 !important;\n                bottom: 0 !important;\n                border-radius: 0 !important;\n            }\n            .modal_footer {\n                bottom: 0 !important;\n                left: 0 !important;\n                right: 0 !important;\n                .modal_footer_cancel, .modal_footer_confirm {\n                    width: 100% !important;\n                    display: block !important;\n                    margin-bottom: 14px !important;\n                    button {\n                        width: 100% !important;\n                    }\n                }\n            }\n        }\n    }\n\n    .modal_container {\n        background-color: rgba(0,0,0,0.2);\n        display: block;\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 20;\n        perspective: 45px;\n        .modal_box {\n            transform-origin: center;\n            animation: ${modal_animate_down} 0.4s both;\n            border-radius: 12px;\n            background-color: #fff;\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n            position: absolute;\n            top: 100px;\n            width: 500px;\n            left: 0;\n            right: 0;\n            margin: auto;\n            .modal_footer, .modal_title{\n                text-align: center;\n                left: 0;\n                right: 0;\n            }\n            .modal_image{\n                width: 500px;\n                height: 300px;\n                border-radius: 12px 12px 0 0;\n            }\n            .modal_title{\n                margin: 20px 0 20px;\n                font-weight: bold;\n                text-align: center;\n                font-size: 24px;\n            }\n            .modal_body{\n                text-align: center;\n                margin: 12px 20px 28px;\n                .user_input{\n                    margin-top: 12px;\n                }\n                .live_edit_section{\n                    margin-top: 20px;\n                }\n            }\n            .modal_footer{\n                padding: 20px;\n                .modal_footer_cancel, .modal_footer_confirm{\n                    display: inline-block;\n                    width: 50%;\n                    white-space: nowrap;\n                    vertical-align: top;\n                    overflow: hidden;\n                }\n            }\n        }\n    }\n    .symbol{\n        margin: auto;\n        background-position: center;\n        background-size: contain;\n        background-repeat: no-repeat;\n        &.symbol_clone{\n            background-image: url(${SymbolClone});\n        }\n        &.symbol_archive{\n            background-image: url(${SymbolArchive});\n        }\n        &.symbol_delete{\n            background-image: url(${SymbolDelete});\n        }\n        &.symbol_new_doc{\n            background-image: url(${SymbolNewDoc});\n        }\n        &.symbol_new_folder{\n            background-image: url(${SymbolNewFolder});\n        }\n    }\n`;\n\nexport default class Modal extends React.Component<ModalProps, any> {\n    form: Form | null = null;\n\n    renderCancelButton() {\n        if (this.props.show_cancel_btn === false) {\n            return null;\n        }\n        return (\n            <div className=\"modal_footer_cancel\">\n                <Button\n                    big\n                    filled\n                    config={{\n                        label: this.props.cancel_button_label || oh.translate('user_input_hoc_cancel'),\n                        default_value: \"\",\n                        key: \"cancel\",\n                        type: \"button\"\n                    }}\n                    onClick={() => this.props.cancelCB()}\n                />\n            </div>\n        );\n    }\n\n    renderConfirmButton() {\n        if (this.props.show_confirm_btn === false) {\n            return null;\n        }\n        return (\n            <div className=\"modal_footer_confirm\">\n                <Button\n                    big\n                    filled\n                    light\n                    config={{\n                        label: this.props.confirm_button_label || oh.translate('user_input_hoc_confirm'),\n                        default_value: \"\",\n                        key: \"confirm\",\n                        type: \"button\"\n                    }}\n                    onClick={() => this.props.confirmCB()}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <ModalContainer>\n                <div className={`modal_container`}>\n                    <div className=\"modal_box\">\n                        {\n                            this.props.class ?\n                            <div className={`modal_image symbol symbol_${this.props.class}`}> </div>\n                            :\n                            null\n                        }\n                        <div className=\"modal_title\">\n                            { this.props.title }\n                        </div>\n                        <div className=\"modal_body\">\n                            { this.props.message }\n                            <Form\n                                input_configs={this.props.input_configs}\n                                refCB={(form) => { this.form = form; }}\n                            />\n                        </div>\n                        <div className=\"modal_footer\">\n                            { this.renderCancelButton() }\n                            { this.renderConfirmButton() }\n                        </div>\n                    </div>\n                </div>\n            </ModalContainer>\n        );\n    }\n}\n"]}