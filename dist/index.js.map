{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as React from 'react';\nimport oh from 'output-helpers';\nimport translations from './translations';\n\n\nimport PromptModal from './PromptModal';\nimport TextInput from './TextInput';\nimport BoolInput from './BoolInput';\nimport GridInput from './GridInput';\n\nexport type InputType = \"bool\" | \"button\" | \"date\" | \"grid\" | \"number\" | \"select\" | \"text\";\nexport interface InputConfig {\n    [key: string]: any;\n    default_value: any;\n    type: InputType;\n    onChange: (any) => void;\n}\nexport interface PromptRequest {\n    inputs: InputConfig[];\n    props?: object;\n}\nexport interface PromptState {\n    show?: boolean;\n    modal_props?: any;\n    values?: any[];\n    inputs?: any[];\n}\nexport interface ComponentObject {\n    bool?: typeof React.Component;\n    button?: typeof React.Component;\n    date?: typeof React.Component;\n    grid?: typeof React.Component;\n    number?: typeof React.Component;\n    select?: typeof React.Component;\n    text?: typeof React.Component;\n    modal?: typeof React.Component;\n}\n\n//Add the translations of this repo to OH. Prefix: \"user_input_hoc_\".\noh.addDictionary(translations);\n\n\n\n\nlet custom_components: ComponentObject = {};\n\n\n\n\n\nfunction getInputComponents(input_components: ComponentObject, inputs: InputConfig[], values: any[], changeCB: (number, any) => void): JSX.Element[] {\n    return inputs.map((input_request, index) => {\n        let InputComponent = input_components[input_request.type];\n        if (custom_components && custom_components.hasOwnProperty(input_request.type)) {\n            InputComponent = custom_components[input_request.type];\n        }\n\n        return <InputComponent\n            key={index}\n            request={input_request}\n            value={values[index]}\n            onChange={(value) => {\n                if (input_request.onChange) {\n                    input_request.onChange(value);\n                }\n                changeCB(index, value);\n            }}\n        />;\n    });\n}\n\n\n\n\nfunction getComponentWithInputs(input_configs: InputConfig[], cb): typeof React.Component {\n    class InputWrapper extends React.Component<any, PromptState> {\n        confirmCB: (any) => void | null;\n        input_components: ComponentObject;\n\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                values: input_configs.map(input => input.default_value),\n                inputs: input_configs\n            };\n            this.confirmCB = cb || null;\n\n            this.input_components = {\n                text: TextInput,\n                grid: GridInput,\n                bool: BoolInput\n            };\n        }\n\n        userConfirmedCB() {\n            this.setState({\n                show: false\n            });\n            if (this.confirmCB) {\n                this.confirmCB(this.state.values);\n                this.confirmCB = null;\n            }\n        }\n\n        inputValueChangeCB(index, value) {\n            let all_values = [].concat(this.state.values);\n            all_values[index] = value;\n            this.setState({\n                values: all_values\n            });\n        }\n\n        renderInputs() {\n            return this.state.inputs.map((input_request, index) => {\n                let InputComponent = this.input_components[input_request.type];\n                if (custom_components && custom_components.hasOwnProperty(input_request.type)) {\n                    InputComponent = custom_components[input_request.type];\n                }\n                return <InputComponent\n                    key={index}\n                    request={input_request}\n                    value={this.state.values[index]}\n                    onChange={(value) => {\n                        if (input_request.onChange) {\n                            input_request.onChange(value);\n                        }\n                        this.inputValueChangeCB(index, value);\n                    }}\n                />;\n            });\n        }\n\n        render() {\n            return (\n                <div>\n                    { this.renderInputs() }\n                </div>\n            );\n        }\n    }\n\n    return InputWrapper;\n}\n\n\n\n\n\n\n\nexport function InputHOC (\n    WrappedComponent: typeof React.Component\n): typeof React.Component {\n    class Prompt extends React.Component<any, PromptState> {\n        exports: {\n            prompt: (prompt_request: PromptRequest, confirmCB: (any) => void, cancelCB: () => void) => void;\n            cancel: () => void;\n        };\n        confirmCB: any;\n        cancelCB: any;\n        input_components: ComponentObject;\n\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                show: false,\n                modal_props: {},\n                values: []\n            };\n            this.exports = {\n                prompt: (prompt_request, confirmCB, cancelCB) => {\n                    this.initPrompt(prompt_request.inputs, prompt_request.props, confirmCB, cancelCB);\n                },\n                cancel: () => {\n                    this.cancelRequest();\n                }\n            };\n            this.confirmCB = null;\n            this.cancelCB = null;\n\n            this.input_components = {\n                text: TextInput,\n                grid: GridInput,\n                bool: BoolInput\n            };\n        }\n\n        initPrompt(inputs: InputConfig[], props?: object, confirmCB?: (any) => void, cancelCB?: () => void) {\n            let sanitized_inputs = inputs.filter(input => input.type !== \"button\");\n            if (sanitized_inputs.length !== inputs.length) {\n                console.warn(\"UserInput: Invalid input types detected for Prompt.\");\n            }\n            this.confirmCB = confirmCB || null;\n            this.cancelCB = cancelCB || null;\n            let values = sanitized_inputs.map(input => input.default_value);\n            this.setState({\n                show: true,\n                modal_props: props,\n                inputs: inputs,\n                values: values\n            });\n        }\n\n        cancelRequest() {\n            this.confirmCB = null;\n            this.cancelCB = null;\n            this.setState({\n                show: false,\n                inputs: [],\n                values: []\n            });\n        }\n\n        userConfirmedCB() {\n            this.setState({\n                show: false\n            });\n            if (this.confirmCB) {\n                this.confirmCB(this.state.values);\n                this.confirmCB = null;\n                this.cancelCB = null;\n            }\n        }\n        userCancelledCB() {\n            this.setState({\n                show: false\n            });\n            if (this.cancelCB) {\n                this.cancelCB();\n                this.cancelCB = null;\n                this.confirmCB = null;\n            }\n        }\n\n        inputValueChangeCB(index, value) {\n            let all_values = [].concat(this.state.values);\n            all_values[index] = value;\n            this.setState({\n                values: all_values\n            });\n        }\n\n        renderInputs() {\n            if (!this.state.inputs) { return null; }\n            return this.state.inputs.map((input_request, index) => {\n                let InputComponent = this.input_components[input_request.type];\n                if (custom_components && custom_components.hasOwnProperty(input_request.type)) {\n                    InputComponent = custom_components[input_request.type];\n                }\n                return <InputComponent\n                    key={index}\n                    request={input_request}\n                    value={this.state.values[index]}\n                    onChange={(value) => {\n                        if (input_request.onChange) {\n                            input_request.onChange(value);\n                        }\n                        this.inputValueChangeCB(index, value);\n                    }}\n                />;\n            });\n        }\n\n        renderPrompt() {\n            if (!this.state.show) { return null; }\n            let Modal: typeof React.Component = PromptModal;\n            if (custom_components && custom_components.hasOwnProperty(\"modal\")) {\n                Modal = custom_components.modal;\n            }\n            return (\n                <Modal\n                    confirmCB={() => { this.userConfirmedCB(); }}\n                    cancelCB={() => { this.userCancelledCB(); }}\n                    renderInputs={() => { return this.renderInputs(); }}\n                    {...this.state.modal_props}\n                />\n            );\n        }\n\n\n        render() {\n            return (<div>\n                <WrappedComponent UserPrompt={this.exports} {...this.props} />\n                { this.renderPrompt() }\n            </div>);\n        }\n    }\n\n    return Prompt;\n}\n\n\nexport namespace InputHOC {\n    export function setCustomComponents(object_with_components: ComponentObject) {\n        custom_components = object_with_components;\n    }\n    export function generateInputs(input_configs: InputConfig[], confirmCB?: (any) => void) {\n        if (input_configs.length < 1) {\n            throw new Error(\"UserInput: GenerateInputs requires at least one input.\");\n        }\n        if (!confirmCB) {\n            let inputs_missing_cb = input_configs.filter(input => !input.onChange);\n            if (inputs_missing_cb.length > 0) {\n                throw new Error(\"UserInput: GenerateInputs with 'individual_callbacks' property true requires every input to specify a onChange callback.\");\n            }\n        }\n        return getComponentWithInputs(input_configs, confirmCB);\n    }\n}\n\nexport default InputHOC;\n"],"sourceRoot":"/source/"}